# Generated by Django 5.0.5 on 2024-05-08 19:28

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='cliente',
            fields=[
                ('id_cliente', models.BigAutoField(primary_key=True, serialize=False)),
                ('nombre_empresa', models.CharField(max_length=100)),
                ('rut', models.CharField(max_length=12)),
                ('direccion', models.CharField(max_length=150)),
                ('telefono', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='estado',
            fields=[
                ('id_estado', models.BigAutoField(primary_key=True, serialize=False)),
                ('estado', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='etapa',
            fields=[
                ('id_etapa', models.BigAutoField(primary_key=True, serialize=False)),
                ('etapa', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='prospecto',
            fields=[
                ('id_prospecto', models.BigAutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('telefono', models.CharField(max_length=100)),
                ('fecha_ingreso', models.DateField(auto_now=True)),
                ('sexo', models.CharField(choices=[('Male', 'Masculino'), ('Fem', 'Femenino')], max_length=40)),
                ('cliente_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TechTestAPP.cliente')),
                ('estado_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TechTestAPP.estado')),
                ('etapa_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TechTestAPP.etapa')),
            ],
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=120)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
